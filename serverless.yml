service: frontendjobs-mailer
plugins:
  - serverless-dotenv-plugin

provider:
  name: aws
  runtime: nodejs8.10
  timeout: 30
  iamRoleStatements:
    - Effect: Allow
      Action:
        - SES:Publish
        - SES:SendEmail
        - lambda:InvokeFunction
        - lambda:InvokeAsync
      Resource: "*"

functions:
  daily:
    handler: handler.rss
    environment:
      SCHEDULE: ${env:DAILY_SCHEDULE}
      URL: ${env:RSS_URL}
    events:
      - http:
          path: daily
          method: get
          cors: true
  weekly:
    handler: handler.rss
    environment:
      SCHEDULE: ${env:WEEKLY_SCHEDULE}
      URL: ${env:RSS_URL}
    events:
      - http:
          path: weekly
          method: get
          cors: true
  scheduler_weekly:
    handler: handler.scheduler
    environment:
      FEED: ${env:WEEKLY_FEED_URL}
      SEND_EMAIL_URL: ${env:SEND_EMAIL_URL}
      SCHEDULE: ${env:WEEKLY_SCHEDULE}
      USERS: ${env:MAILCHIMP_WEEKLY_USERS}
    events:
      - schedule: cron(0 17 ? * MON *)
  scheduler_daily:
    handler: handler.scheduler
    environment:
      FEED: ${env:DAILY_FEED_URL}
      SEND_EMAIL_URL: ${env:SEND_EMAIL_URL}
      SCHEDULE: ${env:WEEKLY_SCHEDULE}
      USERS: ${env:MAILCHIMP_DAILY_USERS}
    events:
      - schedule: cron(0 17 * * ? *)
  mailchimp_list_weekly:
    handler: handler.mailchimp_list
    environment:
      SEGMENT: ${env:WEEKLY_SEGMENT}
    events:
      - http:
          path: mailchimp_list_weekly
          method: get
          cors: true
  mailchimp_list_daily:
    handler: handler.mailchimp_list
    environment:
      SEGMENT: ${env:DAILY_SEGMENT}
    events:
      - http:
          path: mailchimp_list_daily
          method: get
          cors: true
  send_email:
    handler: handler.send_email
    events:
      - http:
          path: send_email
          method: post
          cors: true
